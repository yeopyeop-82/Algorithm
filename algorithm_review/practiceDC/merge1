#include <stdio.h>

void merge(int ls, int le, int rs, int re, int A[]) {
    int lptr = ls, rptr = rs;
    int bptr = 0;
    int B[] = (int*) calloc (((le - ls)+(re -rs) + 2) * sizeof(int));

    while (lptr <= le && rptr <= re) {
        if (A[lptr] < A[rptr]) {
            B[bptr++] = A[lptr++];
        }
        else if (A[lptr] > A[rptr]) {
            B[bptr++] = A[rptr++];
        }
    }

    if (lptr > le) {
        for (int i = rptr; i <= re; i++) {
            B[bptr++] = A[i];
        }
    }
    else if (rptr > re) {
        for (int i = lptr; i <= le; i++) {
            B[bptr++] = A[i];
        }
    }

    // A <- B
}

void msort(int s, int e, int A[]) {

    if (s == e) {
        return;
    }

    int m = (s + e) / 2;

    msort(s, m, A);
    msort(m + 1, e, A);
    
    merge(s, m, m + 1, e, A); // 다 쪼갰으면 전달전달 ~ ~

}

int main(void) {
    printf("msort 구현입니다.");
    return 0;
}


